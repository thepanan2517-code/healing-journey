/* Lightweight scene engine for the healing journey */
(() => {
  // ===== helpers =====
  const $  = (s, p = document) => p.querySelector(s);
  const $$ = (s, p = document) => Array.from(p.querySelectorAll(s));

  // ===== elements =====
  const sceneEl = $('#scene');
  const btnPrev = $('#btn-prev');
  const btnNext = $('#btn-next');
  const dots    = $('#dots');

  // ===== birds & score =====
  const BIRDS = {
    budgie:   { name: '‡∏ô‡∏Å‡∏´‡∏á‡∏™‡πå‡∏´‡∏¢‡∏Å',  bg: 'assets/bird-budgie.jpg',   desc: '‡∏î‡πâ‡∏≤‡∏ô‡∏à‡∏¥‡∏ï‡πÉ‡∏à : ‡∏£‡πà‡∏≤‡πÄ‡∏£‡∏¥‡∏á ‡∏Ç‡∏µ‡πâ‡πÄ‡∏•‡πà‡∏ô ‡∏ä‡∏≠‡∏ö‡∏™‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏£ ‡∏õ‡∏£‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏Å‡πà‡∏á ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏° : ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏Å‡∏±‡∏ö‡∏ô‡∏±‡∏Å‡∏û‡∏π‡∏î ‡∏Å‡∏≤‡∏£‡∏ß‡∏≤‡∏î‡∏†‡∏≤‡∏û ‡∏£‡πâ‡∏≠‡∏á‡πÄ‡∏û‡∏•‡∏á ' },
    hornbill: { name: '‡∏ô‡∏Å‡πÄ‡∏á‡∏∑‡∏≠‡∏Å',    bg: 'assets/bird-hornbill.jpg', desc: '‡∏î‡πâ‡∏≤‡∏ô‡∏à‡∏¥‡∏ï‡πÉ‡∏à : ‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏ö‡∏ú‡∏¥‡∏î‡∏ä‡∏≠‡∏ö ‡∏Å‡∏•‡πâ‡∏≤‡∏´‡∏≤‡∏ç ‡∏£‡∏±‡∏Å‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏Å ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏° : ‡∏õ‡∏•‡∏π‡∏Å‡∏õ‡πà‡∏≤ ‡πÄ‡∏•‡πà‡∏≤‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏Å‡∏±‡∏ö‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏£‡∏£‡∏Ñ‡πå' },
    owl:      { name: '‡∏ô‡∏Å‡∏Æ‡∏π‡∏Å',      bg: 'assets/bird-owl.jpg',      desc: '‡∏î‡πâ‡∏≤‡∏ô‡∏à‡∏¥‡∏ï‡πÉ‡∏à : ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏Å‡∏±‡∏ö‡∏Ñ‡∏ô‡∏ä‡∏≠‡∏ö‡∏Ñ‡∏¥‡∏î ‡πÄ‡∏á‡∏µ‡∏¢‡∏ö‡∏Ç‡∏£‡∏∂‡∏° ‡∏ä‡∏±‡πà‡∏á‡∏™‡∏±‡∏á‡πÄ‡∏Å‡∏ï ‡∏£‡∏±‡∏Å‡∏™‡∏á‡∏ö ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏° : ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô ‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå ‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á‡∏Ñ‡∏∑‡∏ô ‡∏ó‡∏≥‡∏™‡∏°‡∏≤‡∏ò‡∏¥ ‡πÇ‡∏¢‡∏Ñ‡∏∞' },
    dove:     { name: '‡∏ô‡∏Å‡∏û‡∏¥‡∏£‡∏≤‡∏ö‡∏Ç‡∏≤‡∏ß', bg: 'assets/bird-dove.jpg',     desc: '‡∏î‡πâ‡∏≤‡∏ô‡∏à‡∏¥‡∏ï‡πÉ‡∏à : ‡∏™‡∏á‡∏ö ‡∏£‡∏±‡∏Å‡∏™‡∏±‡∏ô‡∏ï‡∏¥ ‡∏£‡∏±‡∏Å‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏∏‡∏ï‡∏¥‡∏ò‡∏£‡∏£‡∏ó ‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏™‡∏°‡∏∑‡∏≠‡∏ô‡∏ú‡∏π‡πâ‡πÉ‡∏Å‡∏•‡πà‡πÄ‡∏Å‡∏•‡∏µ‡πà‡∏¢ ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏° : ‡πÉ‡∏´‡πâ‡∏Ñ‡∏≥‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤ ‡∏Å‡∏≤‡∏£‡∏ö‡∏≥‡∏ö‡∏±‡∏î ‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏û‡∏•‡∏±‡∏á‡∏ö‡∏ß‡∏Å ‡∏Å‡∏≤‡∏£‡∏ß‡πà‡∏≤‡∏¢‡∏ô‡πâ‡∏≥‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÅ‡∏Ç‡πá‡∏á‡∏Ç‡∏±‡∏ô ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÄ‡∏ö‡∏≤‡πÜ‡πÄ‡∏ä‡πà‡∏ô‡∏õ‡∏±‡πà‡∏ô‡∏à‡∏±‡∏Å‡∏£‡∏¢‡∏≤‡∏ô‡πÉ‡∏ô‡∏™‡∏ß‡∏ô' },
    eagle:    { name: '‡∏ô‡∏Å‡∏≠‡∏¥‡∏ô‡∏ó‡∏£‡∏µ‡∏¢‡πå',  bg: 'assets/bird-eagle.jpg',    desc: '‡∏î‡πâ‡∏≤‡∏ô‡∏à‡∏¥‡∏ï‡πÉ‡∏à : ‡∏°‡∏∏‡πà‡∏á‡∏°‡∏±‡πà‡∏ô ‡πÅ‡∏Ç‡πá‡∏á‡πÅ‡∏Å‡∏£‡πà‡∏á ‡∏ß‡∏¥‡∏™‡∏±‡∏¢‡∏ó‡∏±‡∏®‡∏ô‡πå‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡πÅ‡∏ô‡πà‡∏ß‡πÅ‡∏ô‡πà‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô ‡πÑ‡∏°‡πà‡∏Å‡∏•‡∏±‡∏ß‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡πâ‡∏≤‡∏ó‡∏≤‡∏¢ ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏° : ‡∏õ‡∏µ‡∏ô‡πÄ‡∏Ç‡∏≤ ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏ô‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏Ç‡πà‡∏á‡∏Ç‡∏±‡∏ô ‡∏ß‡∏¥‡πà‡∏á‡∏°‡∏≤‡∏£‡∏≤‡∏ò‡∏≠‡∏ô ‡πÑ‡∏ï‡∏£‡∏Å‡∏µ‡∏¨‡∏≤ ‡πÄ‡∏î‡∏¥‡∏ô‡∏õ‡πà‡∏≤ ‡∏Å‡∏≤‡∏£‡∏ó‡πâ‡∏≤‡∏ó‡∏≤‡∏¢' },
  };

  // ===== app state =====
  let state = {
  i: 0,
  name: localStorage.getItem('hj_name') || '',
  feelings: JSON.parse(localStorage.getItem('hj_feelings') || '[]'),
  tired: localStorage.getItem('hj_tired') || '',
  journal: localStorage.getItem('hj_journal') || '',
  // NEW: ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡πá‡∏ö‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ô‡∏Å
  scores: JSON.parse(localStorage.getItem('hj_scores') || '{"budgie":0,"dove":0,"owl":0,"hornbill":0,"eagle":0}')
};

  // ===== dots =====
  function renderDots() {
    dots.innerHTML = '';
    for (let k = 0; k < SCENES.length; k++) {
      const d = document.createElement('div');
      d.className = 'dot' + (k === state.i ? ' active' : '');
      dots.appendChild(d);
    }
  }

  // ===== router =====
  function renderScene() {
    const s = SCENES[state.i];
    if (!s) return;

    btnPrev.disabled = state.i === 0;
    btnNext.textContent = state.i === SCENES.length - 1 ? '‡∏à‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á' : '‡∏ñ‡∏±‡∏î‡πÑ‡∏õ ‚Üí';
    renderDots();

    switch (s.type) {
      case 'start':    sceneStart(s);     break;
      case 'narrate':  sceneNarrate(s);   break;
      case 'question': sceneQuestion(s);  break;
      case 'timer':    sceneTimer(s);     break;
      case 'result':   sceneResult(s);    break;
      default:         sceneNarrate(s);   break;
    }
  }
  const route = () => renderScene();

  btnPrev.addEventListener('click', () => {
    if (state.i > 0) { state.i--; route(); }
  });
  btnNext.addEventListener('click', () => {
    if (state.i < SCENES.length - 1) { state.i++; route(); }
    else { state.i = 0; route(); }
  });

  document.addEventListener('keydown', e => {
    if (e.key === 'ArrowLeft') btnPrev.click();
    if (e.key === 'ArrowRight' || e.key === 'Enter') btnNext.click();
  });

  // ===== scenes =====
  function applyBg(s) {
    if (s.bg) {
      sceneEl.style.backgroundImage    = `url('${s.bg}')`;
      sceneEl.style.backgroundSize     = 'cover';
      sceneEl.style.backgroundPosition = 'center';
    } else {
      sceneEl.style.backgroundImage = '';
    }
  }

  function sceneStart(s) {
    sceneEl.className = 'scene center hero';
    applyBg(s);

    btnPrev.style.display = 'none';
    btnNext.style.display = 'none';
    dots.style.display    = 'none';

    sceneEl.innerHTML = `
      <div class="center fade-in">
        <button id="btn-begin" class="start-btn">‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á</button>
      </div>
    `;
    $('#btn-begin').addEventListener('click', () => {
      btnPrev.style.display = '';
      btnNext.style.display = '';
      dots.style.display    = '';
      state.i = 1;
      route();
    });
  }

  function sceneNarrate(s) {
    sceneEl.className = 'scene hero';
    applyBg(s);

    sceneEl.innerHTML = `
      <div class="narrate-wrap fade-in-up">
        <div class="bubble">${s.text || ''}</div>
        ${s.text2 ? `<div class="bubble small">${s.text2}</div>` : ''}
        <div class="tap-hint">‡πÅ‡∏ï‡∏∞/‡∏Ñ‡∏•‡∏¥‡∏Å ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏õ‡∏ï‡πà‡∏≠</div>
      </div>
    `;
    $('.narrate-wrap').addEventListener('click', () => {
      if (state.i < SCENES.length - 1) { state.i++; route(); }
    });
  }

  // Question scene: ‡∏°‡∏µ 2 ‡∏ä‡πà‡∏ß‡∏á (‡πÄ‡∏•‡πà‡∏≤‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á -> ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°)
  function sceneQuestion(s) {
    sceneEl.className = 'scene';
    applyBg(s);

    let stage = 'story'; // 'story' -> 'ask'
    render();

    function render() {
      if (stage === 'story' && s.text) {
        sceneEl.innerHTML = `
          <div class="narrate-wrap fade-in-up">
            <div class="bubble">${s.text}</div>
            <div class="bubble small">${s.question}</div>
            <div class="tap-hint">‡πÅ‡∏ï‡∏∞‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å</div>
          </div>
        `;
        $('.narrate-wrap').addEventListener('click', () => {
          stage = 'ask';
          render();
        });
      } else {
        sceneEl.innerHTML = `
          <div class="qa-wrap fade-in-up">
            ${s.text ? `<div class="bubble small">${s.text}</div>` : ''}
            <h3 class="q-title">${s.question}</h3>
            <div class="q-choices">
              ${s.options.map((o,i)=>`
                <button class="q-btn" data-to="${o.to}" data-score="${o.score}">
                  ${o.text}
                </button>
              `).join('')}
            </div>
          </div>
        `;
        $$('.q-btn').forEach(btn=>{
          btn.addEventListener('click', () => {
            const to    = btn.dataset.to;          // ‡∏Ñ‡∏µ‡∏¢‡πå‡∏ô‡∏Å
            const score = Number(btn.dataset.score || 0);
            if (state.scores[to] != null) state.scores[to] += score;

            localStorage.setItem('hj_scores', JSON.stringify(state.scores));
            if (state.i < SCENES.length - 1) { state.i++; route(); }
          });
        });
      }
    }
  }

  // Timer scene (‡∏ó‡πà‡∏≤‡∏Å‡∏≤‡∏¢/‡∏ô‡∏±‡∏ö‡∏ñ‡∏≠‡∏¢‡∏´‡∏•‡∏±‡∏á)
  function sceneTimer(s) {
    sceneEl.className = 'scene center';
    applyBg(s);

    const secs = Number(s.seconds || 10);
    sceneEl.innerHTML = `
      <div class="panel timer fade-in-up">
        <h3>${s.title || ''}</h3>
        <p class="note">${s.subtitle || '‡∏ô‡∏±‡∏ö‡∏ñ‡∏≠‡∏¢‡∏´‡∏•‡∏±‡∏á'}</p>
        <div class="big-timer" id="tm"> ${secs} </div>
        <div class="tap-hint" style="display:none">‡πÅ‡∏ï‡∏∞‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏õ‡∏ï‡πà‡∏≠</div>
      </div>
    `;
    let t = secs;
    const el = $('#tm');
    const hint = $('.tap-hint');
    const intv = setInterval(() => {
      t--; el.textContent = t;
      if (t <= 0) {
        clearInterval(intv);
        el.textContent = '‚úîÔ∏é';
        hint.style.display = 'block';
        sceneEl.addEventListener('click', () => {
          if (state.i < SCENES.length - 1) { state.i++; route(); }
        }, { once: true });
      }
    }, 1000);
  }

 function sceneResult(s) {
  sceneEl.className = 'scene center hero';

  // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ô‡∏Å‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î
  const entries = Object.entries(state.scores);
  entries.sort((a, b) => b[1] - a[1]);
  const topKey = (entries[0] && entries[0][0]) || 'owl';
  const bird   = BIRDS[topKey] || { name:'‡∏ô‡∏Å‡∏õ‡∏£‡∏¥‡∏®‡∏ô‡∏≤', bg:'', desc:'' };

  // ‡πÉ‡∏ä‡πâ‡∏£‡∏π‡∏õ‡∏ô‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á + ‡πÑ‡∏™‡πâ‡∏Å‡∏£‡∏≠‡∏á‡∏°‡∏∑‡∏î‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏≠‡πà‡∏≤‡∏ô‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡∏á‡πà‡∏≤‡∏¢
  const bgLayer = bird.bg 
    ? `linear-gradient(180deg, rgba(0,0,0,.6), rgba(0,0,0,.6)), url('${bird.bg}')`
    : `radial-gradient(1200px 800px at 50% 30%, #14223a 0%, #0b1020 60%)`;
  sceneEl.style.backgroundImage    = bgLayer;
  sceneEl.style.backgroundSize     = 'cover';
  sceneEl.style.backgroundPosition = 'center';

  // ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤
  sceneEl.innerHTML = `
    <div class="center fade-in-up">
      <h2 class="result-title">‡∏ô‡∏Å‡∏Ñ‡∏π‡πà‡πÉ‡∏à‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠</h2>

      <div class="bird-card">
        ${bird.bg ? `<img class="bird-img" src="${bird.bg}" alt="${bird.name}" onerror="this.style.display='none'">` : ``}
        <div class="bird-info">
          <h1 class="big bird-name">üïäÔ∏è ${bird.name}</h1>
          ${bird.desc ? `<p class="note">${bird.desc}</p>` : ``}
        </div>
      </div>

      <div class="row" style="justify-content:center;margin-top:14px">
        <button id="btn-restart" class="ghost">‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà</button>
        <button id="btn-clear" class="ghost">‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô</button>
      </div>
    </div>
  `;

  // ‡∏õ‡∏∏‡πà‡∏°
  $('#btn-restart').addEventListener('click', () => {
    state.i = 0; 
    route();
  });

  $('#btn-clear').addEventListener('click', () => {
    state.scores = { budgie:0, hornbill:0, owl:0, dove:0, eagle:0 };
    localStorage.setItem('hj_scores', JSON.stringify(state.scores));
    alert('‡∏•‡πâ‡∏≤‡∏á‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡πÅ‡∏•‡πâ‡∏ß');
  });
}

  // start
  renderScene();
})();